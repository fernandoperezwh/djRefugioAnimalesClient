"""
Django settings for djRefugioAnimalesClient project.

Generated by 'django-admin startproject' using Django 1.8.19.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import environ
import os

from djRefugioAnimalesClient.core.providers import RefugioAnimalesProvider

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Take environment variables from .env file
server_env = os.environ.get('PYTHON_ENV', 'development')
environ.Env.read_env(os.path.join(BASE_DIR, '.environments/.env.{server_env}'.format(server_env=server_env)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.refugio_animales'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'djRefugioAnimalesClient.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'djRefugioAnimalesClient/templates'),
            os.path.join(BASE_DIR, 'apps.refugio_animales/templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djRefugioAnimalesClient.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = 'static/'


# https://docs.djangoproject.com/en/3.2/ref/contrib/messages/
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.DEBUG:   'alert-info',
    messages.INFO:    'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR:   'alert-danger',
}

# Configuracion de conexion para la api de djRefugioAnimales
DJREFUGIOANIMALES = {
    'default_server': 'oauth_server',
    'servers': {
        'token_auth_server': {
            'host': env('DJREFUGIOANIMALES_SERVER_TOKEN_AUTH_HOST'),
            'port': env('DJREFUGIOANIMALES_SERVER_TOKEN_AUTH_PORT'),
            'username': env('DJREFUGIOANIMALES_SERVER_TOKEN_AUTH_USERNAME'),
            'password': env('DJREFUGIOANIMALES_SERVER_TOKEN_AUTH_PASSWORD'),

        },
        'jwt_server': {
            'host': env('DJREFUGIOANIMALES_SERVER_JWT_HOST'),
            'port': env('DJREFUGIOANIMALES_SERVER_JWT_PORT'),
            'username': env('DJREFUGIOANIMALES_SERVER_JWT_USERNAME'),
            'password': env('DJREFUGIOANIMALES_SERVER_JWT_PASSWORD'),
        },
        'oauth_server': {
            'host': env('DJREFUGIOANIMALES_SERVER_OAUTH_HOST'),
            'port': env('DJREFUGIOANIMALES_SERVER_OAUTH_PORT'),
            'client_id': env('DJREFUGIOANIMALES_SERVER_OAUTH_CLIENT_ID'),
            'client_secret': env('DJREFUGIOANIMALES_SERVER_OAUTH_CLIENT_SECRET'),
        },
    },
}

# region Singleton
RefugioAnimalesProvider()
# endregion
